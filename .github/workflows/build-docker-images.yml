# workflows/build-docker-image.yml
name: Build and Push Docker Images to GitHub Container Registry

on:
  # push:
  #   branches:
  #     - main  # Триггер при пуше в ветку main
  #   tags: [ 'v*.*.*' ]  # Публикация по тегам версий (например, v1.0.0)
  # pull_request:
  #   branches: [ "main" ]
  workflow_call:
    secrets: # Объявляем все секреты
      SERVER_USER:
        required: true
      SERVER_SSH_KEY:
        required: true
      POSTGRES_USER_PASSWORD:
        required: true
      TELEGRAM_BOT_TOKEN:
        required: true
      VK_TOKEN:
        required: true
      SENTRY_AUTH_TOKEN:
        required: true
      PGADMIN_DEFAULT_PASSWORD:
        required: true
      CERTBOT_EMAIL:
        required: true
      PROXY_API_KEY:
        required: true
env:
  REGISTRY: ghcr.io  # Используем GitHub Container Registry
  IMAGE_NAME_BACKEND: ${{ github.repository }}/backend
  IMAGE_NAME_NGINX: ${{ github.repository }}/nginx
  CERTBOT_DOMAIN: ${{ vars.CERTBOT_DOMAIN }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write  # Для работы с sigstore/fulcio

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # # Установка cosign для подписи образов (кроме PR)
      # - name: Install cosign
      #   if: github.event_name != 'pull_request'
      #   uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0
      #   with:
      #     cosign-release: 'v2.2.4'

      # Настройка Docker Buildx для сборки multi-platform образов
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Авторизация в GitHub Container Registry (кроме PR)
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Извлечение метаданных для Docker-образов Backend
      - name: Extract Docker metadata for Backend
        id: meta-backend
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}

      # Сборка и публикация Docker-образа Backend
      - name: Build and push Backend Docker image
        id: build-and-push-backend
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Dockerfile.backend.prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Извлечение метаданных для Docker-образов Nginx
      - name: Extract Docker metadata for Nginx
        id: meta-nginx
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_NGINX }}

      # Сборка и публикация Docker-образа Nginx
      - name: Build and push Nginx Docker image
        id: build-and-push-nginx
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Dockerfile.nginx.prod
          args: |
            CERTBOT_EMAIL=${{ secrets.CERTBOT_EMAIL }}
            CERTBOT_DOMAIN=${{ env.CERTBOT_DOMAIN }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-nginx.outputs.tags }}
          labels: ${{ steps.meta-nginx.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # # Подпись опубликованного Docker-образа Backend (кроме PR)
      # - name: Sign the published Backend Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     TAGS: ${{ steps.meta-backend.outputs.tags }}
      #     DIGEST: ${{ steps.build-and-push-backend.outputs.digest }}
      #   run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # # Подпись опубликованного Docker-образа Nginx (кроме PR)
      # - name: Sign the published Nginx Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     TAGS: ${{ steps.meta-nginx.outputs.tags }}
      #     DIGEST: ${{ steps.build-and-push-nginx.outputs.digest }}
      #   run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}