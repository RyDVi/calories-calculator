# Generated by Django 5.0.7 on 2024-11-23 20:35

import re
from django.db import migrations, transaction

@transaction.atomic
def merge_units(apps, schema_editor):
    Unit = apps.get_model('recipes', 'Unit')
    Product = apps.get_model('recipes', 'Product')

    synonyms_g = ["g", "gramm", "gramms", "грамм", "граммы", "г", "гр", "gram", "grams"]
    synonyms_ml = ["ml", "мл"]

    def write_synonyms(synonyms_x, unit_x):
        units = Unit.objects.filter(name__in=synonyms_x)

        if units.exists():
            first_unit = units.first()
            Product.objects.filter(unit__in=units).update(unit=first_unit)
            units.exclude(id=first_unit.id).delete()
            first_unit.name = unit_x
            first_unit.synonyms = ','.join(synonyms_x)
            first_unit.save()

    write_synonyms(synonyms_g, 'грамм')
    write_synonyms(synonyms_ml, 'мл')

@transaction.atomic
def merge_categories(apps, schema_editor):
    Category = apps.get_model('recipes', 'Category')
    Product = apps.get_model('recipes', 'Product')

    for category in Category.objects.all():
        category.name = re.sub("\w{2}:", "", category.name.split(',')[0])
        duplicates = Category.objects.filter(name__icontains=category.name).exclude(id=category.id)
        Product.objects.filter(category__in=duplicates).update(category=category)
        duplicates.delete()
        category.save()


class Migration(migrations.Migration):

    dependencies = [
        ('recipes', '0005_category_synonyms_unit_synonyms'),
    ]

    operations = [
        migrations.RunPython(merge_units, migrations.RunPython.noop),
        migrations.RunPython(merge_categories, migrations.RunPython.noop),
    ]
