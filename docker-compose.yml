services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.dev
    container_name: djangobackend
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
      - "5678:5678"
    depends_on:
      - db
      - opensearch-node1
    restart: always
    networks:
      - app_network
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      DEBUG: True
      ALLOWED_HOSTS: djangobackend
      OPENSEARCH_URL: http://opensearch-node1:9200

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    container_name: react_frontend
    volumes:
      - ./frontend:/app
      - app_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    restart: always
    networks:
      - app_network
    env_file:
      - .env
    # environment:
      # API_URL: http://djangobackend:8000

  db:
    image: postgres:alpine
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - app_network
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER_NAME}
      - POSTGRES_PASSWORD=${POSTGRES_USER_PASSWORD}

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.admin   # Логин для доступа к pgAdmin
      PGADMIN_DEFAULT_PASSWORD: admin            # Пароль для доступа к pgAdmin
    ports:
      - "5050:80"   # Локальный порт 5050 связывается с портом pgAdmin
    networks:
      - app_network
    depends_on:
      - db          # Указываем, что pgAdmin зависит от контейнера с PostgreSQL

  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}    # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
      - "DISABLE_SECURITY_PLUGIN=true" # Disables Security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - app_network # All of the containers will join the same Docker bridge network
    

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      - OPENSEARCH_HOSTS=http://opensearch-node1:9200
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true" # disables security dashboards plugin in OpenSearch Dashboards
    networks:
      - app_network
    depends_on:
      - opensearch-node1


volumes:
  static_volume:
  media_volume:
  postgres_data:
  app_node_modules:
  opensearch-data1:

networks:
  app_network:
    name: foodstat_app_network
    driver: bridge